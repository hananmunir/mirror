/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import gsap from "gsap";

function Model(props) {
  const { nodes, materials } = useGLTF("/scene.glb");
  const lidRef = useRef();

  useEffect(() => {
    if (!lidRef.current) return;

    console.log(props.isOpen);
    if (props.isOpen) {
      gsap.to(lidRef.current.position, {
        duration: 0.9,
        delay: 0.5,
        y: 3.5,
        z: -2.91,
      });
      gsap.to(lidRef.current.rotation, {
        duration: 1,
        delay: 0.5,
        x: -1.74,
        onStart: () => {},
      });
    } else {
      gsap.to(lidRef.current.position, {
        duration: 0.9,
        delay: 0.5,
        y: 0,
        z: 0,
      });
      gsap.to(lidRef.current.rotation, {
        duration: 1,
        delay: 0.5,
        x: 0,
      });
    }
  }, [props.isOpen, lidRef]);
  return (
    <group scale={0.5} {...props} dispose={null}>
      <mesh
        geometry={nodes.Top_low.geometry}
        material={materials.standardSurface1}
        ref={lidRef}
        position={[0, 3.5, -2.91]}
        rotation={[-1.74, 0, 0]}
        material-metalness={1}
      />
      <mesh
        geometry={nodes.Bot_low.geometry}
        material={materials.standardSurface1}
        material-metalness={1}
        material-roughness={0}
      />
    </group>
  );
}

useGLTF.preload("/scene.glb");

export default Model;
